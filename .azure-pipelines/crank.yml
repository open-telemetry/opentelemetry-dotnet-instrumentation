trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - docs/*
      - .github/*
pr:
  branches:
    include:
      - main
      - release/*
  paths:
    exclude:
      - docs/*
      - .github/*

schedules:
- cron: "0 4 * * *"
  displayName: Daily 4am (UTC) build
  branches:
    include:
    - main
    - benchmarks/*
  always: true

jobs:


- job: windows_profiler
  pool:
    vmImage: windows-2019

  steps:

  - task: UseDotNet@2
    displayName: install dotnet core runtime 3.1
    inputs:
      packageType: runtime
      version: 3.1.x

  - task: UseDotNet@2
    displayName: install dotnet core sdk 5.0
    inputs:
      packageType: sdk
      version: 5.0.x

  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      configuration: Release
      arguments: /nowarn:netsdk1138
      projects: |
        src/Datadog.Trace.ClrProfiler.Managed.Loader/Datadog.Trace.ClrProfiler.Managed.Loader.csproj
        sample-libs/**/Samples.ExampleLibrary*.csproj

  - task: NuGetToolInstaller@1
    displayName: install nuget

  - task: NuGetCommand@2
    displayName: nuget restore
    inputs:
      restoreSolution: Datadog.Trace.Native.sln
      verbosityRestore: Normal

  - task: MSBuild@1
    displayName: msbuild
    inputs:
      solution: Datadog.Trace.proj
      platform: x64
      configuration: Release
      msbuildArguments: /t:BuildCpp
      maximumCpuCount: true

  - publish: $(System.DefaultWorkingDirectory)/src/Datadog.Trace.ClrProfiler.Native/bin/Release/x64
    artifact: windows-native


- job: linux_profiler
  pool:
    vmImage: ubuntu-20.04
  steps:

  - task: UseDotNet@2
    displayName: install dotnet core runtime 3.1
    inputs:
      packageType: runtime
      version: 3.1.x

  - task: UseDotNet@2
    displayName: install dotnet core sdk 5.0
    inputs:
      packageType: sdk
      version: 5.0.x

  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      configuration: Release
      arguments: /nowarn:netsdk1138
      projects: |
        src/Datadog.Trace.ClrProfiler.Managed.Loader/Datadog.Trace.ClrProfiler.Managed.Loader.csproj
  
  - script: |
      sudo apt-get update
      sudo apt-get install -y llvm clang
    displayName: install_dependencies

  - script: |
      cd ./src/Datadog.Trace.ClrProfiler.Native
      CXX=clang++ CC=clang cmake . -DCMAKE_BUILD_TYPE=Release
      make
    displayName: build_profiler

  - publish: $(System.DefaultWorkingDirectory)/src/Datadog.Trace.ClrProfiler.Native/bin
    artifact: linux-native


- job: crank
  pool: Throughput
  workspace:
    clean: all
  dependsOn:
  - linux_profiler
  - windows_profiler
  condition: succeeded()

  steps:
  - download: current
    artifact: linux-native

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/linux-native
      targetFolder: $(System.DefaultWorkingDirectory)/

  - download: current
    artifact: windows-native

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/windows-native
      targetFolder: $(System.DefaultWorkingDirectory)/

  - script: |
      cd ./build/crank
      chmod +x ./run.sh
      ./run.sh
    env:
      OTEL_SERVICE: dd-trace-dotnet