<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <BuildInParallel Condition="'$(BuildInParallel)' == ''">true</BuildInParallel>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <TracerHomeDirectory Condition="'$(TracerHomeDirectory)' == ''">$(MSBuildThisFileDirectory)src\bin\windows-tracer-home</TracerHomeDirectory>
  </PropertyGroup>

  <ItemGroup>
    <CsharpProject Include="src\**\*.csproj" />
    <CppProject Include="src\**\*.vcxproj"/>
    <SampleProject Include="test\test-applications\**\*.csproj" />
  </ItemGroup>

  <Target Name="Restore">
    <MSBuild Targets="Restore" Projects="@(CsharpProject);@(CppProject);@(SampleProject)"/>
  </Target>

  <Target Name="Clean">
    <MSBuild Targets="Clean" Projects="@(CsharpProject);@(CppProject);@(SampleProject)"/>
  </Target>

  <!-- default target -->
  <Target Name="Build">
    <MSBuild Targets="Build" Projects="@(CsharpProject);@(CppProject)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Target Name="BuildFrameworkReproductions">
    <MSBuild Targets="Build" Projects="@(FrameworkReproduction)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Target Name="BuildCsharp">
    <MSBuild Targets="Restore" Projects="@(CsharpProject)" Properties="Platform=AnyCPU">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>

    <MSBuild Targets="Build" Projects="@(CsharpProject)" Properties="Platform=AnyCPU">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Target Name="BuildCpp">
    <MSBuild Targets="Build" Projects="@(CppProject)" Condition="'$(Platform)' == 'x64' OR '$(Platform)' == 'All'" Properties="Platform=x64">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>

    <MSBuild Targets="Build" Projects="@(CppProject)" Condition="'$(Platform)' == 'x86' OR '$(Platform)' == 'All' OR '$(Buildx86Profiler)' == 'true'" Properties="Platform=x86">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Target Name="RestoreAndBuildSamplesForPackageVersions" Condition="'$(TestAllPackageVersions)'=='true'">

    <!-- Build the core C# projects first, so that the sample project builds do not need to build them and can be run
         concurrently -->
    <MSBuild Targets="Restore" Projects="@(CsharpProject)" BuildInParallel="false" RemoveProperties="TargetFramework;Platform">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
    <MSBuild Targets="Build" Projects="@(CsharpProject)" BuildInParallel="false" RemoveProperties="TargetFramework;Platform">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>

    <!-- Filter the sample projects by TargetFramework -->
    <ItemGroup>
      <PackageVersionSampleCompile Include="@(PackageVersionSample)" Condition="'%(PackageVersionSample.TargetFramework)' == '' or '%(PackageVersionSample.TargetFramework)'=='$(TargetFramework)'" />
    </ItemGroup>

    <!-- Build the sample projects concurrently -->
    <MSBuild Targets="Restore" Projects="@(PackageVersionSampleCompile)" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
    <MSBuild Targets="Publish" Projects="@(PackageVersionSampleCompile)" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Target Name="BuildSamples" DependsOnTargets="RestoreAndBuildSamplesForPackageVersions">
    <MSBuild Targets="Build" Projects="@(SampleProject)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Target Name="PublishManagedProfilerOnDisk">
    <ItemGroup>
      <TargetFramework Include="net45;net461;netstandard2.0;netcoreapp3.1" />
    </ItemGroup>

    <ItemGroup>
      <ManagedProfilerPublishProject Include="src\Datadog.Trace.ClrProfiler.Managed\Datadog.Trace.ClrProfiler.Managed.csproj" />
    </ItemGroup>

    <MSBuild Targets="Publish" Projects="@(ManagedProfilerPublishProject)" BuildInParallel="false" Properties="Platform=AnyCPU;TargetFramework=%(TargetFramework.Identity);PublishDir=$(TracerHomeDirectory)\%(TargetFramework.Identity)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Target Name="PublishBuildLoggerOnDisk">
    <ItemGroup>
      <BuildLoggerPublishProject Include="src\Datadog.Trace.MSBuild\Datadog.Trace.MSBuild.csproj">
        <Properties>Platform=AnyCPU;TargetFramework=net45;PublishDir=$(TracerHomeDirectory)\net45</Properties>
      </BuildLoggerPublishProject>

      <BuildLoggerPublishProject Include="src\Datadog.Trace.MSBuild\Datadog.Trace.MSBuild.csproj">
        <Properties>Platform=AnyCPU;TargetFramework=net461;PublishDir=$(TracerHomeDirectory)\net461</Properties>
      </BuildLoggerPublishProject>

      <BuildLoggerPublishProject Include="src\Datadog.Trace.MSBuild\Datadog.Trace.MSBuild.csproj">
        <Properties>Platform=AnyCPU;TargetFramework=netstandard2.0;PublishDir=$(TracerHomeDirectory)\netstandard2.0</Properties>
      </BuildLoggerPublishProject>

      <BuildLoggerPublishProject Include="src\Datadog.Trace.MSBuild\Datadog.Trace.MSBuild.csproj">
        <Properties>Platform=AnyCPU;TargetFramework=netcoreapp3.1;PublishDir=$(TracerHomeDirectory)\netcoreapp3.1</Properties>
      </BuildLoggerPublishProject>
    </ItemGroup>

    <MSBuild Targets="Publish" Projects="@(BuildLoggerPublishProject)" BuildInParallel="false">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Target Name="BuildLoader">
    <ItemGroup>
      <ManagedLoaderProject Include="src\Datadog.Trace.ClrProfiler.Managed.Loader\Datadog.Trace.ClrProfiler.Managed.Loader.csproj"/>
    </ItemGroup>

    <MSBuild Targets="Build" Projects="@(ManagedLoaderProject)" Properties="Platform=AnyCPU">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Target Name="PublishNativeProfilerOnDisk" DependsOnTargets="BuildLoader;BuildCpp">
    <Copy Condition="'$(Platform)' == 'x64' OR '$(Platform)' == 'All'"
        SourceFiles="$(MSBuildThisFileDirectory)src\Datadog.Trace.ClrProfiler.Native\bin\$(Configuration)\x64\OpenTelemetry.AutoInstrumentation.ClrProfiler.Native.dll"
        DestinationFolder="$(TracerHomeDirectory)\win-x64"
        SkipUnchangedFiles="true"
        Retries="3"
        RetryDelayMilliseconds="300"/>
    <Copy Condition="'$(Platform)' == 'x86' OR '$(Platform)' == 'All' OR '$(Buildx86Profiler)' == 'true'"
        SourceFiles="$(MSBuildThisFileDirectory)src\Datadog.Trace.ClrProfiler.Native\bin\$(Configuration)\x86\OpenTelemetry.AutoInstrumentation.ClrProfiler.Native.dll"
        DestinationFolder="$(TracerHomeDirectory)\win-x86"
        SkipUnchangedFiles="true"
        Retries="3"
        RetryDelayMilliseconds="300"/>
  </Target>

  <Target Name="SetMsiProperties">
    <PropertyGroup>
      <!-- we need to build both x64 and x86 profilers to build the x64 msi -->
      <Buildx86Profiler Condition="'$(Platform)' == 'x64' OR '$(Platform)' == 'All'">true</Buildx86Profiler>
    </PropertyGroup>
  </Target>

  <Target Name="Msi" DependsOnTargets="SetMsiProperties;CreateHomeDirectory;MsiOnly">
  </Target>

  <Target Name="CreateHomeDirectory" DependsOnTargets="PublishNativeProfilerOnDisk;PublishManagedProfilerOnDisk;PublishBuildLoggerOnDisk">
    <Copy
      SourceFiles="$(MSBuildThisFileDirectory)integrations.json"
      DestinationFolder="$(TracerHomeDirectory)"
      SkipUnchangedFiles="true"
      Retries="3"
      RetryDelayMilliseconds="300"/>

    <Delete Condition="'$(ZipHomeDirectory)' == 'true'" Files="$(TracerHomeDirectory).zip" />

    <ZipDirectory
        Condition="'$(ZipHomeDirectory)' == 'true'"
        SourceDirectory="$(TracerHomeDirectory)"
        DestinationFile="$(TracerHomeDirectory).zip" />
  </Target>
</Project>