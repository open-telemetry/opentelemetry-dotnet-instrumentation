name: ci

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - machine: windows-2022
            containers: windows
          - machine: ubuntu-20.04
            containers: linux
          - machine: macos-11
            containers: none
    runs-on: ${{ matrix.machine }}
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-dotnet@v2.1.1
        with:
          dotnet-version: | 
            3.1.x
            6.0.x
      - run: ./build.cmd Workflow --containers ${{ matrix.containers }}
      - name: Upload logs
        uses: actions/upload-artifact@v3.1.0
        if: always()
        with:
          name: logs-${{ matrix.machine }}
          path: build_data/
      - name: Upload binaries
        uses: actions/upload-artifact@v3.1.0
        if: always()
        with:
          name: bin-${{ matrix.machine }}
          path: bin/tracer-home

  build-container:
    strategy:
      fail-fast: false
      matrix:
        base-image: [ alpine ]
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v3.1.0
    - name: Build in Docker container
      run: |
        set -e
        docker build -t mybuildimage -f "./docker/${{ matrix.base-image }}.dockerfile" .
        docker run --rm --mount type=bind,source="${GITHUB_WORKSPACE}",target=/project mybuildimage \
          ./build.sh Workflow --containers none
    - name: Publish Linux build
      uses: actions/upload-artifact@v3.1.0
      with:
        name: bin-${{ matrix.base-image }}
        path: bin/tracer-home
      if: (${{ job.status }} != 'cancelled')
      continue-on-error: true

  shell-scripts:
    strategy:
      fail-fast: false
      matrix:
        include:
          - machine: windows-2022
            log-dir: "/c/ProgramData/OpenTelemetry .NET AutoInstrumentation/logs"
          - machine: ubuntu-20.04
            log-dir: "/var/log/opentelemetry/dotnet"
          - machine: macos-11
            log-dir: "/var/log/opentelemetry/dotnet"
    runs-on: ${{ matrix.machine }}
    steps:
      - uses: actions/setup-dotnet@v2.1.1
        with:
          dotnet-version: 6.0.x
      - run: brew install coreutils
        if: ${{ runner.os == 'macOS' }}
      - name: Create test directory
        run: sudo mkdir -p ${{ matrix.log-dir }} && sudo chmod a+rwx ${{ matrix.log-dir }}  # workaround before next release
        if: ${{ runner.os != 'Windows' }}
      - name: Test the Shell scripts from README.md
        shell: bash
        run: |
          set -e
          curl -sSfL https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/download.sh -O
          sh ./download.sh
            test "$(ls -A "$HOME/.otel-dotnet-auto")"
          curl -sSfL https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/instrument.sh -O
          . ./instrument.sh
          dotnet help
            test "$(ls -A '${{ matrix.log-dir }}' )"

  shell-scripts-container:
    strategy:
      fail-fast: false
      matrix:
        base-image: [ alpine ]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3.1.0
    - name: Test the Shell scripts from README.md in Docker container
      run: |
        set -e
        docker build -t mybuildimage -f "./docker/${{ matrix.base-image }}.dockerfile" .
        docker run --rm mybuildimage /bin/sh -c '
          set -e
          curl -sSfL https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/download.sh -O
          sh ./download.sh
            test "$(ls -A "$HOME/.otel-dotnet-auto")"
          curl -sSfL https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/instrument.sh -O
          . ./instrument.sh
          dotnet help
            test "$(ls -A /var/log/opentelemetry/dotnet )"
        '

  pack:
    needs: build

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: nuget/setup-nuget@v1.1.1

      - name: Download Windows Artifacts from build job
        uses: actions/download-artifact@v3.0.1
        with:
          name: bin-windows-2022
          path: nuget/bin-windows

      - name: Download Ubuntu Artifacts from build job
        uses: actions/download-artifact@v3.0.1
        with:
          name: bin-ubuntu-20.04
          path: nuget/bin-linux-glibc 

      - name: Download Mac-OS Artifacts from build job
        uses: actions/download-artifact@v3.0.1
        with:
          name: bin-macos-11
          path: nuget/bin-macos

      - name: Build NuGet package
        run: nuget pack OpenTelemetry.AutoInstrumentation.nuspec -Properties NoWarn=NU5100,NU5123,NU5128
        working-directory: nuget

      - name: Upload Nuget
        uses: actions/upload-artifact@v3.1.0
        with:
          name: OpenTelemetry.AutoInstrumentation.Nuget
          path: nuget/*.nupkg
