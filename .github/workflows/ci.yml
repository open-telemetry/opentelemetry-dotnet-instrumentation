name: ci

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - machine: windows-2022
            containers: windows
          - machine: ubuntu-20.04
            containers: linux
          - machine: macos-11
            containers: none
    runs-on: ${{ matrix.machine }}
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: actions/setup-dotnet@v2.1.1
        with:
          dotnet-version: | 
            3.1.x
            6.0.x
      - run: ./build.cmd Workflow --containers ${{ matrix.containers }}
      - name: Upload logs
        uses: actions/upload-artifact@v3.1.0
        if: always()
        with:
          name: logs-${{ matrix.machine }}
          path: build_data/
      - name: Upload binaries
        uses: actions/upload-artifact@v3.1.0
        if: always()
        with:
          name: bin-${{ matrix.machine }}
          path: bin/tracer-home

  container-build:
    name: Container Build 
    strategy:
      fail-fast: false
      matrix:
        base-image: [ alpine ]
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v3.0.2
    - name: Build Docker image
      run: |
        docker build \
          --tag otel-dotnet-autoinstrumentation/${{ matrix.base-image }} \
          --file "./build/nuke/docker/${{ matrix.base-image }}.dockerfile" \
          ./build/nuke
    - name: Build in Docker container
      run: |
        docker run --rm \
          --mount type=bind,source="${GITHUB_WORKSPACE}",target=/project \
          otel-dotnet-autoinstrumentation/${{ matrix.base-image }} \
          ./build.sh Workflow --containers none
    - name: Publish Linux build
      uses: actions/upload-artifact@v3.1.0
      with:
        name: bin-${{ matrix.base-image }}
        path: bin/tracer-home
      if: (${{ job.status }} != 'cancelled')
      continue-on-error: true

  install-script:
    strategy:
      fail-fast: false
      matrix:
        include:
          - machine: windows-2022
            distribution: windows
          - machine: ubuntu-20.04
            distribution: linux-glibc
            test-instrument: "true"
          - machine: ubuntu-20.04
            distribution: linux-musl
          - machine: macos-11
            distribution: macos
            test-instrument: "true"
    runs-on: ${{ matrix.machine }}
    steps:
      - name: Run download.sh script
        shell: bash
        run: |
          set -o pipefail
          curl -sSfL https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/download.sh |
            DISTRIBUTION=${{ matrix.distribution }} bash -s
      - name: Test if ./otel-dotnet-auto contains any files
        shell: bash
        run: |
          if [ -z "$(ls -A ./otel-dotnet-auto)" ]; then
            echo "Empty"
            exit 1
          else
            echo "otel-dotnet-auto is installed"
          fi
      - uses: actions/setup-dotnet@v2.1.1
        with:
          dotnet-version: 6.0.x
      - name: Instrument using instrument.sh script
        if: ${{ matrix.test-instrument == 'true' }}
        shell: bash
        run: |
          set -e
          curl -fL https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/instrument.sh -O
          DISTRIBUTION=${{ matrix.distribution }} source ./instrument.sh
          dotnet help
      - name: Test if log folder contains any files
        if: ${{ matrix.test-instrument == 'true' }}
        shell: bash
        run: |
          if [ -z "$(ls -A /var/log/opentelemetry/dotnet)" ]; then
            echo "Empty"
            exit 1
          else
            echo "/var/log/opentelemetry/dotnet contains log files"
          fi

