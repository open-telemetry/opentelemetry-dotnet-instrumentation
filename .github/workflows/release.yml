name: release

on:
  push:
    tags: [ v* ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        machine: [ windows-2022, ubuntu-20.04, macos-11 ]
    runs-on: ${{ matrix.machine }}
    steps:
      - uses: actions/checkout@v3.2.0
      - uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: | 
            6.0.x
            7.0.x
      - run: ./build.cmd
      - name: Upload binaries
        uses: actions/upload-artifact@v3.1.1
        if: always()
        with:
          name: bin-${{ matrix.machine }}
          path: bin/tracer-home

  container-build:
    name: Container Build 
    strategy:
      fail-fast: false
      matrix:
        base-image: [ alpine ]
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v3.2.0
    - name: Build Docker image
      run: |
        docker build \
          --tag otel-dotnet-autoinstrumentation/${{ matrix.base-image }} \
          --file "./docker/${{ matrix.base-image }}.dockerfile" \
          ./build
    - name: Build in Docker container
      run: |
        docker run --rm \
          --mount type=bind,source="${GITHUB_WORKSPACE}",target=/project \
          otel-dotnet-autoinstrumentation/${{ matrix.base-image }} \
          ./build.sh
    - name: Upload ${{ matrix.base-image }} binaries
      uses: actions/upload-artifact@v3.1.1
      if: always()
      with:
        name: bin-${{ matrix.base-image }}
        path: bin/tracer-home

  create-release:
    name: Create GH release
    runs-on: ubuntu-20.04
    needs: [ build, container-build ]
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3.2.0
      - uses: actions/download-artifact@v3.0.1
        with:
          path: .
      - name: Install zip
        uses: montudor/action-zip@v1
      - run: cd bin-alpine ; zip -qq -r ../opentelemetry-dotnet-instrumentation-linux-musl.zip . * ; cd ..
      - run: cd bin-ubuntu-20.04 ; zip -qq -r ../opentelemetry-dotnet-instrumentation-linux-glibc.zip . * ; cd ..
      - run: cd bin-windows-2022 ; zip -qq -r ../opentelemetry-dotnet-instrumentation-windows.zip . * ; cd ..
      - run: cd bin-macos-11 ; zip -qq -r ../opentelemetry-dotnet-instrumentation-macos.zip . * ; cd ..
      - name: Extract Version from Tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v}" >> $GITHUB_OUTPUT
      - name: Create Release
        run: gh release create v${{ env.VERSION }} --draft ./*.zip ./otel-dotnet-auto-install.sh ./OpenTelemetry.DotNet.Auto.psm1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
