name: Build artifacts
on: 
  push: 
    branches: [ main ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  linux_build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        baseImage: [alpine, debian]

    env:
      baseImage: ${{ matrix.baseImage }}
      dotnetCoreSdk5Version: 5.0.103
    steps:
    - uses: actions/checkout@v2
    - name: Build Docker image
      run: |
        docker build \
          --build-arg DOTNETSDK_VERSION=${dotnetCoreSdk5Version} \
          --tag dd-trace-dotnet/${baseImage}-builder \
          --target builder \
          --file "./tracer/build/_build/docker/${baseImage}.dockerfile" \
          "./tracer/build/_build"
    - name: Run 'Clean BuildTracerHome ZipTracerHome' in Docker
      run: |
        docker run --rm \
          --mount type=bind,source="${GITHUB_WORKSPACE}",target=/project \
          --env NugetPackageDirectory=/project/packages \
          --env tracerHome=/project/tracer/bin/tracer-home \
          --env artifacts=/project/tracer/src/bin/artifacts \
          --env OTEL_CLR_ENABLE_NGEN=${OTEL_CLR_ENABLE_NGEN} \
          dd-trace-dotnet/${baseImage}-builder \
          dotnet /build/bin/Debug/_build.dll Clean BuildTracerHome ZipTracerHome
    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: ./tracer/src/bin/artifacts/linux-x64

  windows_build:
    name: Windows Build
    runs-on: windows-2019
    steps:
      - run: git config --system core.longpaths true
      - uses: actions/checkout@v2
      - uses: microsoft/setup-msbuild@v1.0.2
      - run: dotnet --list-sdks
        shell: cmd
      - run: choco install wixtoolset
        shell: cmd
      - run: tracer\build.cmd BuildTracerHome
        shell: cmd
      - run: tracer\build.cmd PackageTracerHome
        shell: cmd
      - uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: tracer/bin/artifacts/*/en-us

  create_release:
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') # only trigger if the current event is for a tag push
    needs: [linux_build, windows_build]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: .
      - name: Extract tag name
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v}
      - name: Extract release notes
        run: awk '/## \[${{ steps.get_version.outputs.VERSION }}\]/,0' docs/CHANGELOG.md >> notes.md
      - run: gh release create v${{ steps.get_version.outputs.VERSION }} -F notes.md artifacts/otel* artifacts/x64/en-us/opentelemetry* artifacts/x86/en-us/opentelemetry*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


