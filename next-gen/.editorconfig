# top-most EditorConfig file
root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

[*.{cs}]
indent_size = 4
file_header_template = Copyright The OpenTelemetry Authors\nSPDX-License-Identifier: Apache-2.0

# Dotnet code style settings:
[*.{cs}]
# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first                               = true : warning

# Use file-scoped namespace
csharp_style_namespace_declarations = file_scoped:warning

# Avoid "this." if not necessary
dotnet_style_qualification_for_field                              = false : warning
dotnet_style_qualification_for_property                           = false : warning
dotnet_style_qualification_for_method                             = false : warning
dotnet_style_qualification_for_event                              = false : warning

# Expression-level preferences
csharp_style_unused_value_assignment_preference = discard_variable : silent
csharp_style_unused_value_expression_statement_preference = discard_variable : silent

# Prefer "var" everywhere
csharp_style_var_for_built_in_types                               = false : warning
csharp_style_var_when_type_is_apparent                            = true : warning
csharp_style_var_elsewhere                                        = false : silent

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods                            = when_on_single_line : suggestion
csharp_style_expression_bodied_constructors                       = false : warning
csharp_style_expression_bodied_operators                          = when_on_single_line : warning

# Name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds            = field
dotnet_naming_symbols.constant_fields.required_modifiers          = const

dotnet_naming_style.pascal_case_style.capitalization              = pascal_case

# static fields should be s_PascalCase
dotnet_naming_rule.static_fields_should_have_prefix.severity      = warning
dotnet_naming_rule.static_fields_should_have_prefix.symbols       = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style         = static_prefix_style

dotnet_naming_symbols.static_fields.applicable_kinds              = field
dotnet_naming_symbols.static_fields.required_modifiers            = static

dotnet_naming_style.static_prefix_style.required_prefix           = s_
dotnet_naming_style.static_prefix_style.capitalization            = pascal_case

# private fields should be _PascalCase
dotnet_naming_rule.pascal_case_for_private_fields.severity        = warning
dotnet_naming_rule.pascal_case_for_private_fields.symbols         = private_fields
dotnet_naming_rule.pascal_case_for_private_fields.style           = pascal_case_underscore_style

dotnet_naming_symbols.private_fields.applicable_kinds             = field
dotnet_naming_symbols.private_fields.applicable_accessibilities   = private

dotnet_naming_style.pascal_case_underscore_style.required_prefix  = _
dotnet_naming_style.pascal_case_underscore_style.capitalization   = pascal_case

# IDE0005: Remove unnecessary import
dotnet_diagnostic.IDE0005.severity = warning

# Remove unnecessary expression value
dotnet_diagnostic.IDE0058.severity = none

[**/obj/**.cs]
generated_code = true