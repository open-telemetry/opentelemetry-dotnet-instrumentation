abstract OpenTelemetry.Metrics.MetricProducer.WriteTo(OpenTelemetry.Metrics.MetricWriter! writer) -> bool
OpenTelemetry.BatchExportProcessorOptions
OpenTelemetry.BatchExportProcessorOptions.BatchExportProcessorOptions(int maxQueueSize = 2048, int maxExportBatchSize = 512, int exportIntervalMilliseconds = 5000, int exportTimeoutMilliseconds = 30000) -> void
OpenTelemetry.BatchExportProcessorOptions.ExportIntervalMilliseconds.get -> int
OpenTelemetry.BatchExportProcessorOptions.ExportTimeoutMilliseconds.get -> int
OpenTelemetry.BatchExportProcessorOptions.MaxExportBatchSize.get -> int
OpenTelemetry.BatchExportProcessorOptions.MaxQueueSize.get -> int
OpenTelemetry.IBatch<TBatchWriter>
OpenTelemetry.IBatch<TBatchWriter>.WriteTo(TBatchWriter writer) -> bool
OpenTelemetry.IBatchWriter
OpenTelemetry.IBatchWriter.BeginBatch(OpenTelemetry.Resources.Resource! resource) -> void
OpenTelemetry.IBatchWriter.BeginInstrumentationScope(OpenTelemetry.InstrumentationScope! instrumentationScope) -> void
OpenTelemetry.IBatchWriter.EndBatch() -> void
OpenTelemetry.IBatchWriter.EndInstrumentationScope() -> void
OpenTelemetry.IExporterAsync<TBatchWriter>
OpenTelemetry.IExporterAsync<TBatchWriter>.ExportAsync<TBatch>(in TBatch batch, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<bool>!
OpenTelemetry.InstrumentationScope
OpenTelemetry.InstrumentationScope.<Clone>$() -> OpenTelemetry.InstrumentationScope!
OpenTelemetry.InstrumentationScope.Attributes.get -> System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<string!, object?>>?
OpenTelemetry.InstrumentationScope.Attributes.init -> void
OpenTelemetry.InstrumentationScope.Equals(OpenTelemetry.InstrumentationScope? other) -> bool
OpenTelemetry.InstrumentationScope.InstrumentationScope(string! name) -> void
OpenTelemetry.InstrumentationScope.Name.get -> string!
OpenTelemetry.InstrumentationScope.Version.get -> string?
OpenTelemetry.InstrumentationScope.Version.init -> void
OpenTelemetry.IProcessor
OpenTelemetry.IProcessor.FlushAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
OpenTelemetry.IProcessor.ShutdownAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
OpenTelemetry.Logging.ILogRecordExporterAsync
OpenTelemetry.Logging.ILogRecordProcessor
OpenTelemetry.Logging.ILogRecordProcessor.ProcessEmittedLogRecord(in OpenTelemetry.Logging.LogRecord logRecord) -> void
OpenTelemetry.Logging.LogRecord
OpenTelemetry.Logging.LogRecord.Attributes.get -> System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>>
OpenTelemetry.Logging.LogRecord.Attributes.init -> void
OpenTelemetry.Logging.LogRecord.Info.get -> OpenTelemetry.Logging.LogRecordInfo
OpenTelemetry.Logging.LogRecord.LogRecord() -> void
OpenTelemetry.Logging.LogRecord.LogRecord(in System.Diagnostics.ActivityContext spanContext, in OpenTelemetry.Logging.LogRecordInfo info) -> void
OpenTelemetry.Logging.LogRecord.SpanContext.get -> System.Diagnostics.ActivityContext
OpenTelemetry.Logging.LogRecordBatchWriter
OpenTelemetry.Logging.LogRecordBatchWriter.LogRecordBatchWriter() -> void
OpenTelemetry.Logging.LogRecordExportProcessorFactory
OpenTelemetry.Logging.LogRecordInfo
OpenTelemetry.Logging.LogRecordInfo.Body.get -> string?
OpenTelemetry.Logging.LogRecordInfo.Body.init -> void
OpenTelemetry.Logging.LogRecordInfo.Equals(OpenTelemetry.Logging.LogRecordInfo other) -> bool
OpenTelemetry.Logging.LogRecordInfo.LogRecordInfo() -> void
OpenTelemetry.Logging.LogRecordInfo.LogRecordInfo(OpenTelemetry.InstrumentationScope! scope) -> void
OpenTelemetry.Logging.LogRecordInfo.ObservedTimestampUtc.get -> System.DateTime
OpenTelemetry.Logging.LogRecordInfo.ObservedTimestampUtc.init -> void
OpenTelemetry.Logging.LogRecordInfo.Scope.get -> OpenTelemetry.InstrumentationScope!
OpenTelemetry.Logging.LogRecordInfo.Severity.get -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordInfo.Severity.init -> void
OpenTelemetry.Logging.LogRecordInfo.SeverityText.get -> string?
OpenTelemetry.Logging.LogRecordInfo.SeverityText.init -> void
OpenTelemetry.Logging.LogRecordInfo.TimestampUtc.get -> System.DateTime
OpenTelemetry.Logging.LogRecordInfo.TimestampUtc.init -> void
OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Debug = 5 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Debug2 = 6 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Debug3 = 7 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Debug4 = 8 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Error = 17 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Error2 = 18 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Error3 = 19 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Error4 = 20 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Fatal = 21 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Fatal2 = 22 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Fatal3 = 23 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Fatal4 = 24 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Info = 9 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Info2 = 10 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Info3 = 11 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Info4 = 12 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Trace = 1 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Trace2 = 2 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Trace3 = 3 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Trace4 = 4 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Unspecified = 0 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Warn = 13 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Warn2 = 14 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Warn3 = 15 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Logging.LogRecordSeverity.Warn4 = 16 -> OpenTelemetry.Logging.LogRecordSeverity
OpenTelemetry.Metrics.AggregationTemporality
OpenTelemetry.Metrics.AggregationTemporality.Cumulative = 2 -> OpenTelemetry.Metrics.AggregationTemporality
OpenTelemetry.Metrics.AggregationTemporality.Delta = 1 -> OpenTelemetry.Metrics.AggregationTemporality
OpenTelemetry.Metrics.AggregationTemporality.Unspecified = 0 -> OpenTelemetry.Metrics.AggregationTemporality
OpenTelemetry.Metrics.Exemplar
OpenTelemetry.Metrics.Exemplar.Equals(OpenTelemetry.Metrics.Exemplar other) -> bool
OpenTelemetry.Metrics.Exemplar.Exemplar() -> void
OpenTelemetry.Metrics.Exemplar.Exemplar(System.DateTime timestampUtc, System.Diagnostics.ActivityTraceId traceId, System.Diagnostics.ActivitySpanId spanId, double value, params System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>> filteredAttributes) -> void
OpenTelemetry.Metrics.Exemplar.Exemplar(System.DateTime timestampUtc, System.Diagnostics.ActivityTraceId traceId, System.Diagnostics.ActivitySpanId spanId, long value, params System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>> filteredAttributes) -> void
OpenTelemetry.Metrics.Exemplar.SpanId.get -> System.Diagnostics.ActivitySpanId
OpenTelemetry.Metrics.Exemplar.TimestampUtc.get -> System.DateTime
OpenTelemetry.Metrics.Exemplar.TraceId.get -> System.Diagnostics.ActivityTraceId
OpenTelemetry.Metrics.Exemplar.ValueAsDouble.get -> double
OpenTelemetry.Metrics.Exemplar.ValueAsLong.get -> long
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.Count.get -> long
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.EndTimeUtc.get -> System.DateTime
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.EndTimeUtc.init -> void
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.ExponentialHistogramMetricPoint() -> void
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.ExponentialHistogramMetricPoint(System.DateTime startTimeUtc, System.DateTime endTimeUtc, OpenTelemetry.Metrics.HistogramMetricPointFeatures features, double min, double max, double sum, long count, int scale, long zeroCount) -> void
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.Features.get -> OpenTelemetry.Metrics.HistogramMetricPointFeatures
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.Max.get -> double
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.Min.get -> double
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.Scale.get -> int
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.StartTimeUtc.get -> System.DateTime
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.StartTimeUtc.init -> void
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.Sum.get -> double
OpenTelemetry.Metrics.ExponentialHistogramMetricPoint.ZeroCount.get -> long
OpenTelemetry.Metrics.ExponentialHistogramMetricPointBuckets
OpenTelemetry.Metrics.ExponentialHistogramMetricPointBuckets.Counts.get -> System.ReadOnlySpan<long>
OpenTelemetry.Metrics.ExponentialHistogramMetricPointBuckets.ExponentialHistogramMetricPointBuckets() -> void
OpenTelemetry.Metrics.ExponentialHistogramMetricPointBuckets.ExponentialHistogramMetricPointBuckets(int offset, System.ReadOnlySpan<long> counts) -> void
OpenTelemetry.Metrics.ExponentialHistogramMetricPointBuckets.Offset.get -> int
OpenTelemetry.Metrics.HistogramMetricPoint
OpenTelemetry.Metrics.HistogramMetricPoint.Count.get -> long
OpenTelemetry.Metrics.HistogramMetricPoint.EndTimeUtc.get -> System.DateTime
OpenTelemetry.Metrics.HistogramMetricPoint.EndTimeUtc.init -> void
OpenTelemetry.Metrics.HistogramMetricPoint.Features.get -> OpenTelemetry.Metrics.HistogramMetricPointFeatures
OpenTelemetry.Metrics.HistogramMetricPoint.HistogramMetricPoint() -> void
OpenTelemetry.Metrics.HistogramMetricPoint.HistogramMetricPoint(System.DateTime startTimeUtc, System.DateTime endTimeUtc, OpenTelemetry.Metrics.HistogramMetricPointFeatures features, double min, double max, double sum, long count) -> void
OpenTelemetry.Metrics.HistogramMetricPoint.Max.get -> double
OpenTelemetry.Metrics.HistogramMetricPoint.Min.get -> double
OpenTelemetry.Metrics.HistogramMetricPoint.StartTimeUtc.get -> System.DateTime
OpenTelemetry.Metrics.HistogramMetricPoint.StartTimeUtc.init -> void
OpenTelemetry.Metrics.HistogramMetricPoint.Sum.get -> double
OpenTelemetry.Metrics.HistogramMetricPointBucket
OpenTelemetry.Metrics.HistogramMetricPointBucket.Count.get -> int
OpenTelemetry.Metrics.HistogramMetricPointBucket.Equals(OpenTelemetry.Metrics.HistogramMetricPointBucket other) -> bool
OpenTelemetry.Metrics.HistogramMetricPointBucket.HistogramMetricPointBucket() -> void
OpenTelemetry.Metrics.HistogramMetricPointBucket.HistogramMetricPointBucket(double value, int count) -> void
OpenTelemetry.Metrics.HistogramMetricPointBucket.Value.get -> double
OpenTelemetry.Metrics.HistogramMetricPointFeatures
OpenTelemetry.Metrics.HistogramMetricPointFeatures.BucketsRecorded = 2 -> OpenTelemetry.Metrics.HistogramMetricPointFeatures
OpenTelemetry.Metrics.HistogramMetricPointFeatures.MinAndMaxRecorded = 1 -> OpenTelemetry.Metrics.HistogramMetricPointFeatures
OpenTelemetry.Metrics.HistogramMetricPointFeatures.None = 0 -> OpenTelemetry.Metrics.HistogramMetricPointFeatures
OpenTelemetry.Metrics.IMetricExporterAsync
OpenTelemetry.Metrics.IMetricExporterAsync.SupportsDeltaAggregationTemporality.get -> bool
OpenTelemetry.Metrics.IMetricProducerFactory
OpenTelemetry.Metrics.IMetricProducerFactory.Create(OpenTelemetry.Metrics.MetricProducerOptions! options) -> OpenTelemetry.Metrics.MetricProducer!
OpenTelemetry.Metrics.IMetricReader
OpenTelemetry.Metrics.IMetricReader.CollectAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
OpenTelemetry.Metrics.IMetricReader.FlushAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
OpenTelemetry.Metrics.IMetricReader.ShutdownAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
OpenTelemetry.Metrics.Metric
OpenTelemetry.Metrics.Metric.AggregationTemporality.get -> OpenTelemetry.Metrics.AggregationTemporality
OpenTelemetry.Metrics.Metric.Description.get -> string?
OpenTelemetry.Metrics.Metric.Description.init -> void
OpenTelemetry.Metrics.Metric.IsFloatingPoint.get -> bool
OpenTelemetry.Metrics.Metric.IsSumNonMonotonic.get -> bool
OpenTelemetry.Metrics.Metric.Metric(OpenTelemetry.Metrics.MetricType metricType, string! name, OpenTelemetry.Metrics.AggregationTemporality aggregationTemporality) -> void
OpenTelemetry.Metrics.Metric.MetricType.get -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.Metric.Name.get -> string!
OpenTelemetry.Metrics.Metric.Unit.get -> string?
OpenTelemetry.Metrics.Metric.Unit.init -> void
OpenTelemetry.Metrics.MetricBatchWriter
OpenTelemetry.Metrics.MetricBatchWriter.MetricBatchWriter() -> void
OpenTelemetry.Metrics.MetricProducer
OpenTelemetry.Metrics.MetricProducer.MetricProducer() -> void
OpenTelemetry.Metrics.MetricProducerOptions
OpenTelemetry.Metrics.MetricProducerOptions.AggregationTemporality.get -> OpenTelemetry.Metrics.AggregationTemporality
OpenTelemetry.Metrics.MetricReaderFactory
OpenTelemetry.Metrics.MetricReaderOptions
OpenTelemetry.Metrics.MetricReaderOptions.ExportTimeoutMilliseconds.get -> int
OpenTelemetry.Metrics.MetricReaderOptions.MetricReaderOptions(int exportTimeoutMilliseconds = 30000) -> void
OpenTelemetry.Metrics.MetricReaderOptions.TemporalityPreference.get -> OpenTelemetry.Metrics.AggregationTemporality
OpenTelemetry.Metrics.MetricReaderOptions.TemporalityPreference.set -> void
OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.DoubleGauge = 45 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.DoubleSum = 29 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.DoubleSumNonMonotonic = 141 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.ExponentialHistogram = 80 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.Histogram = 64 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.LongGauge = 42 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.LongSum = 26 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.LongSumNonMonotonic = 138 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.Summary = 48 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricType.Unknown = 0 -> OpenTelemetry.Metrics.MetricType
OpenTelemetry.Metrics.MetricWriter
OpenTelemetry.Metrics.MetricWriter.MetricWriter() -> void
OpenTelemetry.Metrics.NumberMetricPoint
OpenTelemetry.Metrics.NumberMetricPoint.EndTimeUtc.get -> System.DateTime
OpenTelemetry.Metrics.NumberMetricPoint.NumberMetricPoint() -> void
OpenTelemetry.Metrics.NumberMetricPoint.NumberMetricPoint(System.DateTime startTimeUtc, System.DateTime endTimeUtc, double value) -> void
OpenTelemetry.Metrics.NumberMetricPoint.NumberMetricPoint(System.DateTime startTimeUtc, System.DateTime endTimeUtc, long value) -> void
OpenTelemetry.Metrics.NumberMetricPoint.StartTimeUtc.get -> System.DateTime
OpenTelemetry.Metrics.NumberMetricPoint.ValueAsDouble.get -> double
OpenTelemetry.Metrics.NumberMetricPoint.ValueAsLong.get -> long
OpenTelemetry.Metrics.PeriodicExportingMetricReaderOptions
OpenTelemetry.Metrics.PeriodicExportingMetricReaderOptions.ExportIntervalMilliseconds.get -> int
OpenTelemetry.Metrics.PeriodicExportingMetricReaderOptions.PeriodicExportingMetricReaderOptions(int exportIntervalMilliseconds = 5000, int exportTimeoutMilliseconds = 30000) -> void
OpenTelemetry.Metrics.SummaryMetricPoint
OpenTelemetry.Metrics.SummaryMetricPoint.Count.get -> int
OpenTelemetry.Metrics.SummaryMetricPoint.EndTimeUtc.get -> System.DateTime
OpenTelemetry.Metrics.SummaryMetricPoint.EndTimeUtc.init -> void
OpenTelemetry.Metrics.SummaryMetricPoint.StartTimeUtc.get -> System.DateTime
OpenTelemetry.Metrics.SummaryMetricPoint.StartTimeUtc.init -> void
OpenTelemetry.Metrics.SummaryMetricPoint.Sum.get -> double
OpenTelemetry.Metrics.SummaryMetricPoint.SummaryMetricPoint() -> void
OpenTelemetry.Metrics.SummaryMetricPoint.SummaryMetricPoint(System.DateTime startTimeUtc, System.DateTime endTimeUtc, double sum, int count) -> void
OpenTelemetry.Metrics.SummaryMetricPointQuantile
OpenTelemetry.Metrics.SummaryMetricPointQuantile.Equals(OpenTelemetry.Metrics.SummaryMetricPointQuantile other) -> bool
OpenTelemetry.Metrics.SummaryMetricPointQuantile.Quantile.get -> double
OpenTelemetry.Metrics.SummaryMetricPointQuantile.SummaryMetricPointQuantile() -> void
OpenTelemetry.Metrics.SummaryMetricPointQuantile.SummaryMetricPointQuantile(double quantile, double value) -> void
OpenTelemetry.Metrics.SummaryMetricPointQuantile.Value.get -> double
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterFactory
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterFactory.CreateOtlpLogRecordExporter(OpenTelemetry.OpenTelemetryProtocol.OtlpExporterOptions! options) -> OpenTelemetry.Logging.ILogRecordExporterAsync!
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterFactory.CreateOtlpMetricExporter(OpenTelemetry.OpenTelemetryProtocol.OtlpExporterOptions! options) -> OpenTelemetry.Metrics.IMetricExporterAsync!
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterFactory.CreateOtlpSpanExporter(OpenTelemetry.OpenTelemetryProtocol.OtlpExporterOptions! options) -> OpenTelemetry.Tracing.ISpanExporterAsync!
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterFactory.OtlpExporterFactory(Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory) -> void
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterOptions
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterOptions.Headers.get -> System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string!, string!>>?
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterOptions.OtlpExporterOptions(OpenTelemetry.OpenTelemetryProtocol.OtlpExporterProtocolType? protocolType, System.Uri? url, System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string!, string!>>? headers) -> void
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterOptions.ProtocolType.get -> OpenTelemetry.OpenTelemetryProtocol.OtlpExporterProtocolType?
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterOptions.Url.get -> System.Uri?
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterProtocolType
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterProtocolType.Grpc = 1 -> OpenTelemetry.OpenTelemetryProtocol.OtlpExporterProtocolType
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterProtocolType.HttpProtobuf = 2 -> OpenTelemetry.OpenTelemetryProtocol.OtlpExporterProtocolType
OpenTelemetry.OpenTelemetryProtocol.OtlpExporterProtocolType.Unknown = 0 -> OpenTelemetry.OpenTelemetryProtocol.OtlpExporterProtocolType
OpenTelemetry.Resources.Resource
OpenTelemetry.Resources.Resource.<Clone>$() -> OpenTelemetry.Resources.Resource!
OpenTelemetry.Resources.Resource.Attributes.get -> System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object!>>
OpenTelemetry.Resources.Resource.Equals(OpenTelemetry.Resources.Resource? other) -> bool
OpenTelemetry.Resources.Resource.Resource(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string!, object!>>! attributes) -> void
OpenTelemetry.Tracing.ISpanExporterAsync
OpenTelemetry.Tracing.ISpanProcessor
OpenTelemetry.Tracing.ISpanProcessor.ProcessEndedSpan(in OpenTelemetry.Tracing.Span span) -> void
OpenTelemetry.Tracing.Span
OpenTelemetry.Tracing.Span.Attributes.get -> System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>>
OpenTelemetry.Tracing.Span.Attributes.init -> void
OpenTelemetry.Tracing.Span.Events.get -> System.ReadOnlySpan<OpenTelemetry.Tracing.SpanEvent>
OpenTelemetry.Tracing.Span.Events.init -> void
OpenTelemetry.Tracing.Span.Info.get -> OpenTelemetry.Tracing.SpanInfo
OpenTelemetry.Tracing.Span.Links.get -> System.ReadOnlySpan<OpenTelemetry.Tracing.SpanLink>
OpenTelemetry.Tracing.Span.Links.init -> void
OpenTelemetry.Tracing.Span.Span() -> void
OpenTelemetry.Tracing.Span.Span(in OpenTelemetry.Tracing.SpanInfo info) -> void
OpenTelemetry.Tracing.SpanBatchWriter
OpenTelemetry.Tracing.SpanBatchWriter.SpanBatchWriter() -> void
OpenTelemetry.Tracing.SpanEvent
OpenTelemetry.Tracing.SpanEvent.Equals(OpenTelemetry.Tracing.SpanEvent other) -> bool
OpenTelemetry.Tracing.SpanEvent.Name.get -> string!
OpenTelemetry.Tracing.SpanEvent.SpanEvent() -> void
OpenTelemetry.Tracing.SpanEvent.SpanEvent(string! name) -> void
OpenTelemetry.Tracing.SpanEvent.SpanEvent(string! name, params System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>> attributes) -> void
OpenTelemetry.Tracing.SpanEvent.SpanEvent(string! name, System.DateTime timestampUtc, params System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>> attributes) -> void
OpenTelemetry.Tracing.SpanEvent.TimestampUtc.get -> System.DateTime
OpenTelemetry.Tracing.SpanExportProcessorFactory
OpenTelemetry.Tracing.SpanInfo
OpenTelemetry.Tracing.SpanInfo.EndTimestampUtc.get -> System.DateTime
OpenTelemetry.Tracing.SpanInfo.EndTimestampUtc.init -> void
OpenTelemetry.Tracing.SpanInfo.Equals(OpenTelemetry.Tracing.SpanInfo other) -> bool
OpenTelemetry.Tracing.SpanInfo.Kind.get -> System.Diagnostics.ActivityKind?
OpenTelemetry.Tracing.SpanInfo.Kind.init -> void
OpenTelemetry.Tracing.SpanInfo.Name.get -> string!
OpenTelemetry.Tracing.SpanInfo.ParentSpanId.get -> System.Diagnostics.ActivitySpanId
OpenTelemetry.Tracing.SpanInfo.ParentSpanId.init -> void
OpenTelemetry.Tracing.SpanInfo.Scope.get -> OpenTelemetry.InstrumentationScope!
OpenTelemetry.Tracing.SpanInfo.SpanId.get -> System.Diagnostics.ActivitySpanId
OpenTelemetry.Tracing.SpanInfo.SpanId.init -> void
OpenTelemetry.Tracing.SpanInfo.SpanInfo() -> void
OpenTelemetry.Tracing.SpanInfo.SpanInfo(OpenTelemetry.InstrumentationScope! scope, string! name) -> void
OpenTelemetry.Tracing.SpanInfo.StartTimestampUtc.get -> System.DateTime
OpenTelemetry.Tracing.SpanInfo.StartTimestampUtc.init -> void
OpenTelemetry.Tracing.SpanInfo.StatusCode.get -> System.Diagnostics.ActivityStatusCode
OpenTelemetry.Tracing.SpanInfo.StatusCode.init -> void
OpenTelemetry.Tracing.SpanInfo.StatusDescription.get -> string?
OpenTelemetry.Tracing.SpanInfo.StatusDescription.init -> void
OpenTelemetry.Tracing.SpanInfo.TraceFlags.get -> System.Diagnostics.ActivityTraceFlags
OpenTelemetry.Tracing.SpanInfo.TraceFlags.init -> void
OpenTelemetry.Tracing.SpanInfo.TraceId.get -> System.Diagnostics.ActivityTraceId
OpenTelemetry.Tracing.SpanInfo.TraceId.init -> void
OpenTelemetry.Tracing.SpanInfo.TraceState.get -> string?
OpenTelemetry.Tracing.SpanInfo.TraceState.init -> void
OpenTelemetry.Tracing.SpanLink
OpenTelemetry.Tracing.SpanLink.Equals(OpenTelemetry.Tracing.SpanLink other) -> bool
OpenTelemetry.Tracing.SpanLink.SpanLink() -> void
OpenTelemetry.Tracing.SpanLink.SpanLink(in System.Diagnostics.ActivityContext spanContext, params System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>> attributes) -> void
override OpenTelemetry.InstrumentationScope.Equals(object? obj) -> bool
override OpenTelemetry.InstrumentationScope.GetHashCode() -> int
override OpenTelemetry.InstrumentationScope.ToString() -> string!
override OpenTelemetry.Logging.LogRecordInfo.GetHashCode() -> int
override OpenTelemetry.Metrics.Exemplar.GetHashCode() -> int
override OpenTelemetry.Metrics.HistogramMetricPointBucket.GetHashCode() -> int
override OpenTelemetry.Metrics.SummaryMetricPointQuantile.GetHashCode() -> int
override OpenTelemetry.Resources.Resource.Equals(object? obj) -> bool
override OpenTelemetry.Resources.Resource.GetHashCode() -> int
override OpenTelemetry.Resources.Resource.ToString() -> string!
override OpenTelemetry.Tracing.SpanEvent.GetHashCode() -> int
override OpenTelemetry.Tracing.SpanInfo.GetHashCode() -> int
override OpenTelemetry.Tracing.SpanLink.GetHashCode() -> int
static OpenTelemetry.InstrumentationScope.operator !=(OpenTelemetry.InstrumentationScope? left, OpenTelemetry.InstrumentationScope? right) -> bool
static OpenTelemetry.InstrumentationScope.operator ==(OpenTelemetry.InstrumentationScope? left, OpenTelemetry.InstrumentationScope? right) -> bool
static OpenTelemetry.Logging.LogRecordExportProcessorFactory.CreateBatchExportProcessorAsync(Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory, OpenTelemetry.Resources.Resource! resource, OpenTelemetry.Logging.ILogRecordExporterAsync! exporter, OpenTelemetry.BatchExportProcessorOptions! options) -> OpenTelemetry.Logging.ILogRecordProcessor!
static OpenTelemetry.Logging.LogRecordInfo.operator !=(OpenTelemetry.Logging.LogRecordInfo left, OpenTelemetry.Logging.LogRecordInfo right) -> bool
static OpenTelemetry.Logging.LogRecordInfo.operator ==(OpenTelemetry.Logging.LogRecordInfo left, OpenTelemetry.Logging.LogRecordInfo right) -> bool
static OpenTelemetry.Metrics.Exemplar.GetFilteredAttributesReference(in OpenTelemetry.Metrics.Exemplar exemplar) -> System.Diagnostics.TagList
static OpenTelemetry.Metrics.Exemplar.operator !=(OpenTelemetry.Metrics.Exemplar left, OpenTelemetry.Metrics.Exemplar right) -> bool
static OpenTelemetry.Metrics.Exemplar.operator ==(OpenTelemetry.Metrics.Exemplar left, OpenTelemetry.Metrics.Exemplar right) -> bool
static OpenTelemetry.Metrics.HistogramMetricPointBucket.operator !=(OpenTelemetry.Metrics.HistogramMetricPointBucket left, OpenTelemetry.Metrics.HistogramMetricPointBucket right) -> bool
static OpenTelemetry.Metrics.HistogramMetricPointBucket.operator ==(OpenTelemetry.Metrics.HistogramMetricPointBucket left, OpenTelemetry.Metrics.HistogramMetricPointBucket right) -> bool
static OpenTelemetry.Metrics.MetricReaderFactory.CreatePeriodicExportingMetricReaderAsync(Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory, OpenTelemetry.Resources.Resource! resource, OpenTelemetry.Metrics.IMetricExporterAsync! exporter, System.Collections.Generic.IEnumerable<OpenTelemetry.Metrics.IMetricProducerFactory!>? metricProducerFactories, OpenTelemetry.Metrics.PeriodicExportingMetricReaderOptions! options) -> OpenTelemetry.Metrics.IMetricReader!
static OpenTelemetry.Metrics.SummaryMetricPointQuantile.operator !=(OpenTelemetry.Metrics.SummaryMetricPointQuantile left, OpenTelemetry.Metrics.SummaryMetricPointQuantile right) -> bool
static OpenTelemetry.Metrics.SummaryMetricPointQuantile.operator ==(OpenTelemetry.Metrics.SummaryMetricPointQuantile left, OpenTelemetry.Metrics.SummaryMetricPointQuantile right) -> bool
static OpenTelemetry.Resources.Resource.operator !=(OpenTelemetry.Resources.Resource? left, OpenTelemetry.Resources.Resource? right) -> bool
static OpenTelemetry.Resources.Resource.operator ==(OpenTelemetry.Resources.Resource? left, OpenTelemetry.Resources.Resource? right) -> bool
static OpenTelemetry.Tracing.SpanEvent.GetAttributesReference(in OpenTelemetry.Tracing.SpanEvent spanEvent) -> System.Diagnostics.TagList
static OpenTelemetry.Tracing.SpanEvent.operator !=(OpenTelemetry.Tracing.SpanEvent left, OpenTelemetry.Tracing.SpanEvent right) -> bool
static OpenTelemetry.Tracing.SpanEvent.operator ==(OpenTelemetry.Tracing.SpanEvent left, OpenTelemetry.Tracing.SpanEvent right) -> bool
static OpenTelemetry.Tracing.SpanExportProcessorFactory.CreateBatchExportProcessorAsync(Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory, OpenTelemetry.Resources.Resource! resource, OpenTelemetry.Tracing.ISpanExporterAsync! exporter, OpenTelemetry.BatchExportProcessorOptions! options) -> OpenTelemetry.Tracing.ISpanProcessor!
static OpenTelemetry.Tracing.SpanInfo.operator !=(OpenTelemetry.Tracing.SpanInfo left, OpenTelemetry.Tracing.SpanInfo right) -> bool
static OpenTelemetry.Tracing.SpanInfo.operator ==(OpenTelemetry.Tracing.SpanInfo left, OpenTelemetry.Tracing.SpanInfo right) -> bool
static OpenTelemetry.Tracing.SpanLink.GetAttributesReference(in OpenTelemetry.Tracing.SpanLink spanLink) -> System.Diagnostics.TagList
static OpenTelemetry.Tracing.SpanLink.GetSpanContextReference(in OpenTelemetry.Tracing.SpanLink spanLink) -> System.Diagnostics.ActivityContext
static OpenTelemetry.Tracing.SpanLink.operator !=(OpenTelemetry.Tracing.SpanLink left, OpenTelemetry.Tracing.SpanLink right) -> bool
static OpenTelemetry.Tracing.SpanLink.operator ==(OpenTelemetry.Tracing.SpanLink left, OpenTelemetry.Tracing.SpanLink right) -> bool
virtual OpenTelemetry.Logging.LogRecordBatchWriter.BeginBatch(OpenTelemetry.Resources.Resource! resource) -> void
virtual OpenTelemetry.Logging.LogRecordBatchWriter.BeginInstrumentationScope(OpenTelemetry.InstrumentationScope! instrumentationScope) -> void
virtual OpenTelemetry.Logging.LogRecordBatchWriter.EndBatch() -> void
virtual OpenTelemetry.Logging.LogRecordBatchWriter.EndInstrumentationScope() -> void
virtual OpenTelemetry.Logging.LogRecordBatchWriter.WriteLogRecord(in OpenTelemetry.Logging.LogRecord logRecord) -> void
virtual OpenTelemetry.Metrics.MetricBatchWriter.BeginBatch(OpenTelemetry.Resources.Resource! resource) -> void
virtual OpenTelemetry.Metrics.MetricBatchWriter.EndBatch() -> void
virtual OpenTelemetry.Metrics.MetricWriter.BeginInstrumentationScope(OpenTelemetry.InstrumentationScope! instrumentationScope) -> void
virtual OpenTelemetry.Metrics.MetricWriter.BeginMetric(OpenTelemetry.Metrics.Metric! metric) -> void
virtual OpenTelemetry.Metrics.MetricWriter.EndInstrumentationScope() -> void
virtual OpenTelemetry.Metrics.MetricWriter.EndMetric() -> void
virtual OpenTelemetry.Metrics.MetricWriter.WriteExponentialHistogramMetricPoint(in OpenTelemetry.Metrics.ExponentialHistogramMetricPoint exponentialHistogramMetricPoint, in OpenTelemetry.Metrics.ExponentialHistogramMetricPointBuckets positiveBuckets, in OpenTelemetry.Metrics.ExponentialHistogramMetricPointBuckets negativeBuckets, System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>> attributes, System.ReadOnlySpan<OpenTelemetry.Metrics.Exemplar> exemplars) -> void
virtual OpenTelemetry.Metrics.MetricWriter.WriteHistogramMetricPoint(in OpenTelemetry.Metrics.HistogramMetricPoint histogramMetricPoint, System.ReadOnlySpan<OpenTelemetry.Metrics.HistogramMetricPointBucket> buckets, System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>> attributes, System.ReadOnlySpan<OpenTelemetry.Metrics.Exemplar> exemplars) -> void
virtual OpenTelemetry.Metrics.MetricWriter.WriteNumberMetricPoint(in OpenTelemetry.Metrics.NumberMetricPoint numberMetricPoint, System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>> attributes, System.ReadOnlySpan<OpenTelemetry.Metrics.Exemplar> exemplars) -> void
virtual OpenTelemetry.Metrics.MetricWriter.WriteSummaryMetricPoint(in OpenTelemetry.Metrics.SummaryMetricPoint summaryMetricPoint, System.ReadOnlySpan<OpenTelemetry.Metrics.SummaryMetricPointQuantile> quantiles, System.ReadOnlySpan<System.Collections.Generic.KeyValuePair<string!, object?>> attributes) -> void
virtual OpenTelemetry.Tracing.SpanBatchWriter.BeginBatch(OpenTelemetry.Resources.Resource! resource) -> void
virtual OpenTelemetry.Tracing.SpanBatchWriter.BeginInstrumentationScope(OpenTelemetry.InstrumentationScope! instrumentationScope) -> void
virtual OpenTelemetry.Tracing.SpanBatchWriter.EndBatch() -> void
virtual OpenTelemetry.Tracing.SpanBatchWriter.EndInstrumentationScope() -> void
virtual OpenTelemetry.Tracing.SpanBatchWriter.WriteSpan(in OpenTelemetry.Tracing.Span span) -> void
~override OpenTelemetry.Logging.LogRecordInfo.Equals(object obj) -> bool
~override OpenTelemetry.Logging.LogRecordInfo.ToString() -> string
~override OpenTelemetry.Metrics.Exemplar.Equals(object obj) -> bool
~override OpenTelemetry.Metrics.Exemplar.ToString() -> string
~override OpenTelemetry.Metrics.HistogramMetricPointBucket.Equals(object obj) -> bool
~override OpenTelemetry.Metrics.HistogramMetricPointBucket.ToString() -> string
~override OpenTelemetry.Metrics.SummaryMetricPointQuantile.Equals(object obj) -> bool
~override OpenTelemetry.Metrics.SummaryMetricPointQuantile.ToString() -> string
~override OpenTelemetry.Tracing.SpanEvent.Equals(object obj) -> bool
~override OpenTelemetry.Tracing.SpanEvent.ToString() -> string
~override OpenTelemetry.Tracing.SpanInfo.Equals(object obj) -> bool
~override OpenTelemetry.Tracing.SpanInfo.ToString() -> string
~override OpenTelemetry.Tracing.SpanLink.Equals(object obj) -> bool
~override OpenTelemetry.Tracing.SpanLink.ToString() -> string
